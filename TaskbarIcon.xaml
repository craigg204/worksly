<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TaskMaster"
                    xmlns:tb="http://www.hardcodet.net/taskbar">
    <tb:TaskbarIcon x:Key="MyTaskBarIcon"
                    IconSource="/Icons/TM_Icon.ico"
                    ToolTipText="TaskMaster"
                    LeftClickCommand="{Binding ShowWindowCommand}"
                    DoubleClickCommand="{Binding HideWindowCommand}">
        <tb:TaskbarIcon.DataContext>
            <local:SysBarViewModel/>
        </tb:TaskbarIcon.DataContext>
        <tb:TaskbarIcon.ContextMenu>
            <ContextMenu>
                <MenuItem Header="New Task" Command="{Binding ShowWindowCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/Add.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="EODMode" Header="Settings" Command="{Binding SettingsWindow}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/Settings.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Name="updateMenu" Header="Check for Updates" Command="{Binding CheckForUpdateCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/CloudDownload_16x.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Exit App" Command="{Binding ExitApplicationCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/CloseSolution.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </tb:TaskbarIcon.ContextMenu>
    </tb:TaskbarIcon>
    <Style TargetType="Button" x:Key="exitBtn">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Button.Foreground" Value="#FF575757"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#FF3A3939" TargetName="Border"/>-->
                            <Setter Property="Button.Foreground" Value="#FFD6D6D6" TargetName="Border"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FF383838"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="submitBtn">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Button.Foreground" Value="#FFB0B0B0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="7" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FFD6D6D6" TargetName="Border"/>
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="#FFD6D6D6"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#FFD6D6D6" TargetName="Border"/>
                            <Setter Property="Background" TargetName="Border">
                                <Setter.Value>
                                    <SolidColorBrush Color="White" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="#FFD6D6D6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="submitBtnPressed">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FFD6D6D6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                CornerRadius="7" BorderThickness="1" BorderBrush="#FFD6D6D6">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>